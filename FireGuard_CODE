// Bibliotecas necessárias para o sensor KY-001 (DS18B20)
#include <OneWire.h>
#include <DallasTemperature.h>
//melodia do MARIO THEME
int 	melodia[]= {660,660,660,510,660,770,380,510,380,320,440,480,450,430,380,660,760,860,700,760,660,520,580,480,510,380,320,440,480,450,430,380,660,760,860,700,760,660,520,580,480,500,760,720,680,620,650,380,430,500,430,500,570,500,760,720,680,620,650,1020,1020,1020,380,500,760,720,680,620,650,380,430,500,430,500,570,585,550,500,380,500,500,500,500,760,720,680,620,650,380,430,500,430,500,570,500,760,720,680,620,650,1020,1020,1020,380,500,760,720,680,620,650,380,430,500,430,500,570,585,550,500,380,500,500,500,500,500,500,500,580,660,500,430,380,500,500,500,500,580,660,870,760,500,500,500,500,580,660,500,430,380,660,660,660,510,660,770,380};

//duraçao de cada nota
int 	duracaodasnotas[]= {100,100,100,100,100,100,100,100,100,100,100,80,100,100,100,80,50,100,80,50,80,80,80,80,100,100,100,100,80,100,100,100,80,50,100,80,50,80,80,80,80,100,100,100,100,150,150,100,100,100,100,100,100,100,100,100,100,150,200,80,80,80,100,100,100,100,100,150,150,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,150,150,100,100,100,100,100,100,100,100,100,100,150,200,80,80,80,100,100,100,100,100,150,150,100,100,100,100,100,100,100,100,100,100,100,100,100,60,80,60,80,80,80,80,80,80,60,80,60,80,80,80,80,80,60,80,60,80,80,80,80,80,80,100,100,100,100,100,100,100};


// Definição dos pinos
#define KY001_PIN A0      // Pino de sinal do sensor KY-001 (DS18B20)
#define MQ135_PIN A1      // Pino do sensor de fumaça MQ-135
#define BUZZER_PIN 2      // Pino do buzzer


// Configuração da comunicação OneWire e do sensor de temperatura
OneWire oneWire(KY001_PIN);
DallasTemperature sensors(&oneWire);

void setup() {
    Serial.begin(9600);              // Inicia comunicação serial para monitoramento
    pinMode(BUZZER_PIN, OUTPUT);     
    digitalWrite(BUZZER_PIN, LOW);   // Garante que o buzzer inicie desligado

    sensors.begin();                 // Inicializa o sensor de temperatura
}

void loop() {
    // Leitura da temperatura (KY-001 / DS18B20)
    sensors.requestTemperatures();  
    float temperatura = sensors.getTempCByIndex(0);  // Lê a temperatura em °C

    // Leitura do nível de gases (MQ-135)
    int qualidadeAr = analogRead(MQ135_PIN);

    // Exibir valores no monitor serial
    Serial.print("Temperatura: ");
    Serial.print(temperatura);
    Serial.print("°C  |  Qualidade do ar: ");
    Serial.println(qualidadeAr);

    // Condições de alerta
    if (temperatura > 53.0 || qualidadeAr > 500) {
        Serial.println("⚠️ ALERTA: Possível incêndio detectado!");
        
        // Ativar o buzzer como alerta sonoro
        musica();
        //tone(BUZZER_PIN, 500); 
        delay(1000);
        noTone(BUZZER_PIN);
    }

    delay(5000); // Espera 5 segundos antes da próxima leitura
}
void musica() {
  //for para tocar as 156 notas começando no 0 ate 156 ++ incrementado
        for (int nota = 0; nota < 156; nota++) {

              int duracaodanota = duracaodasnotas[nota];
              tone(BUZZER_PIN, melodia[nota],duracaodanota);
  //pausa depois das notas
int pausadepoisdasnotas[] ={150,300,300,100,300,550,575,450,400,500,300,330,150,300,200,200,150,300,150,350,300,150,150,500,450,400,500,300,330,150,300,200,200,150,300,150,350,300,150,150,500,300,100,150,150,300,300,150,150,300,150,100,220,300,100,150,150,300,300,300,150,300,300,300,100,150,150,300,300,150,150,300,150,100,420,450,420,360,300,300,150,300,300,100,150,150,300,300,150,150,300,150,100,220,300,100,150,150,300,300,300,150,300,300,300,100,150,150,300,300,150,150,300,150,100,420,450,420,360,300,300,150,300,150,300,350,150,350,150,300,150,600,150,300,350,150,150,550,325,600,150,300,350,150,350,150,300,150,600,150,300,300,100,300,550,575};
              delay(pausadepoisdasnotas[nota]);}

              noTone(BUZZER_PIN);
}
